output: default
groups:
  DmApP8:
    name: Timestamp Fix
    description: Known Events have timestamp or ContextTimeStamp
    index: 2
asyncFuncTimeout: 1000
functions:
  - id: eval
    filter: "true"
    disabled: false
    conf:
      add:
        - name: _raw
          value: JSON.parse(_raw)
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Timestamp fixing based on event content. In place incase Event Breakers
        arent imported
  - id: auto_timestamp
    filter: _raw.timestamp.length > 0 && !_raw.ContextTimeStamp
    disabled: false
    conf:
      srcField: _raw.timestamp
      dstField: _time
      defaultTimezone: utc
      timeExpression: time.getTime() / 1000
      offset: 0
      maxLen: 150
      defaultTime: now
      latestDateAllowed: +1week
      earliestDateAllowed: -420weeks
      timestamps: []
    description: timestamp field if present
    groupId: DmApP8
  - id: auto_timestamp
    filter: _raw.ContextTimeStamp.length > 0
    disabled: false
    conf:
      srcField: _raw. ContextTimeStamp
      dstField: _time
      defaultTimezone: utc
      timeExpression: time.getTime() / 1000
      offset: 0
      maxLen: 150
      defaultTime: now
      latestDateAllowed: +1week
      earliestDateAllowed: -420weeks
    groupId: DmApP8
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Drop unwanted event_simpleNames as defined in the lookup
  - id: drop
    filter: C.Lookup('event_simpleNames_DROP.csv').match(_raw.event_simpleName)
    disabled: false
    conf: {}
    final: true
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Chain function for different events
  - id: chain
    filter: C.Lookup('event_simpleName_NetworkEvents.csv').match(_raw.event_simpleName)
    disabled: false
    conf:
      processor: Crowdstrike_Network
    description: Network Events
    final: false
  - id: chain
    filter: C.Lookup('event_simpleName_Processes.csv').match(_raw.event_simpleName)
    disabled: false
    conf:
      processor: Crowdstrike_Processes
    description: Process & Services
    final: false
  - id: chain
    filter: _raw.event_simpleName=='DnsRequest'
    disabled: false
    conf:
      processor: Crowdstrike_DNS
    final: false
    description: DNS Requests
  - id: chain
    filter: _raw.EventType=='Event_ExternalApiEvent'
    disabled: false
    conf:
      processor: Crowdstrike_ExternalAPIEvent
    description: Event_ExternalApiEvent
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: >-
        Other events filter is a workaround to check if any other pipelines have
        been processed inside the Crowdstrike_General pipeline.


        Redis moved to the end, so we only enrich events that made this far, not pre-aggregation events, and not DNS dropped events.
  - id: chain
    filter: "!cribl_pipe"
    disabled: false
    conf:
      processor: Crowdstrike_OtherEvents
    description: Other Events
    final: false
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Enable enrichment from Redis. Disable if not using Redis
  - id: chain
    filter: "true"
    disabled: true
    conf:
      processor: Inventory_Enrich_FromRedis
    description: Enrich from Redis
