output: default
groups:
  lYiMNr:
    name: Native Aggregation
    description: Enable to replace raw events with aggregation events for Network Connect
      Events
    disabled: false
    index: 4
  dlLbUK:
    name: Redis Aggregation
    index: 6
    disabled: true
asyncFuncTimeout: 1000
functions:
  - id: serde
    filter: "true"
    disabled: false
    conf:
      mode: extract
      type: json
      srcField: _raw
      keep:
        - Local*
        - Remote*
        - aip
        - aid
        - Protocol
        - event_simpleName
        - Connection*
        - timestamp
    description: Agg & Filter prep
  - id: drop
    filter: RemoteAddressIP4.length>0 && LocalAddressIP4.length>0 && RemoteAddressIP4
      == LocalAddressIP4
    disabled: false
    conf: {}
    description: RemoteIP = LocalIP
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Enable Group A OR Group B, NOT BOTH
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "GROUP A: Cribl Native Aggregation "
  - id: aggregation
    filter: LocalPort <= RemotePort
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: true
      sufficientStatsOnly: false
      metricsMode: false
      timeWindow: 60s
      aggregations:
        - values(event_simpleName).as(event_simpleName)
        - values(RemotePort).as(RemotePort)
        - values(aip).as(aip)
        - count()
      cumulative: false
      flushOnInputClose: true
      groupbys:
        - Local*
        - RemoteAdd*
        - aid*
      add: []
    groupId: lYiMNr
  - id: aggregation
    filter: LocalPort > RemotePort
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: false
      sufficientStatsOnly: false
      metricsMode: false
      timeWindow: 60s
      aggregations:
        - values(event_simpleName).as(event_simpleName)
        - values(LocalPort).as(LocalPort)
        - values(aip).as(aip)
        - count()
      cumulative: false
      flushOnInputClose: true
      groupbys:
        - LocalAdd*
        - aid*
        - Remote*
      add: []
    groupId: lYiMNr
  - id: eval
    filter: "true"
    disabled: null
    conf:
      add:
        - value: "aip.length==1 ? aip[0] : aip"
          name: aip
        - name: event_simpleName
          value: "event_simpleName.length==1 ? event_simpleName.length[0] :
            event_simpleName"
        - name: LocalPort
          value: "LocalPort.length==1 ? LocalPort[0] : LocalPort"
        - value: "RemotePort.length==1 ? RemotePort[0] : RemotePort"
          name: RemotePort
    groupId: lYiMNr
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "GROUP B: Aggregation via Redis"
  - id: eval
    filter: "true"
    disabled: true
    conf:
      add:
        - name: Agg_Count_Threshold
          value: "100"
        - name: Agg_Period
          value: "60"
    groupId: dlLbUK
    description: Agg Thresholds Definition
  - id: eval
    filter: LocalPort !== undefined && RemotePort !== undefined
    disabled: true
    conf:
      add:
        - name: __network_key
          value: "LocalPort <= RemotePort ?
            '__net___'+LocalAddressIP4+'___'+LocalPort+'___'+RemoteAddressIP4+'\
            ___'+Protocol :
            '__net___'+RemoteAddressIP4+'___'+RemotePort+'___'+LocalAddressIP4+\
            '___'+Protocol"
        - name: __network_key
          value: "LocalPort == 0 ?
            '__net___'+RemoteAddressIP4+'___'+RemotePort+'___'+LocalAddressIP4+\
            '___'+Protocol+'___'+aip : __network_key"
        - name: __network_key
          value: "RemotePort == 0  ?
            '__net___'+LocalAddressIP4+'___'+LocalPort+'___'+RemoteAddressIP4+'\
            ___'+Protocol+'___'+aip : __network_key"
    groupId: dlLbUK
    description: set key field for redis; account for who has lower port and higher port
  - id: redis
    filter: "true"
    disabled: true
    conf:
      commands:
        - outField: __setnx_results
          command: setnx
          keyExpr: __network_key
          argsExpr: "1"
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:JWghKzfmVLzVWRVkpQrJTvDQxtY1g2lYG8A+Lby4t+6ZzPPUq8Zrsd+flDlpZUWNzN\
        2Fysm/VPsly/IBdbvwew=="
    description: Create key in Redis regardless of traffic direction
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==1
    disabled: true
    conf:
      commands:
        - outField: __sadd_simplename_results
          command: sadd
          keyExpr: "'eventnames'+ __network_key"
          argsExpr: event_simpleName
        - outField: __expire_simplename_results
          command: expire
          keyExpr: "'eventnames'+ __network_key"
          argsExpr: Agg_Period
        - outField: __expire_networkkey_results
          command: expire
          keyExpr: __network_key
          argsExpr: Agg_Period
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:HsvWqQlXf3okCYBDHF29pjH/ME+7Zut7iVXhjKcrpuliDQIAVaTHtfVfvHsV22s/m/\
        jKmRvLOXj7ZGoCdy1lRA=="
    description: Avoiding collisions so lists of simpleNames are accurate. Setting values
      only if setnx was successful
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==0
    disabled: true
    conf:
      commands:
        - outField: __sadd_simplename_results
          command: sadd
          keyExpr: "'eventnames'+ __network_key"
          argsExpr: event_simpleName
        - command: incrby
          outField: Agg_Count
          keyExpr: __network_key
          argsExpr: "1"
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:2fDFebcaUPndQDf2vN9IghoJyKgQAoOA7fTOr+2M1H9shEDJ5e9U4eH/tE8U9r4UEz\
        RqLKQFjepAzdob0UBgDA=="
    description: "Avoiding collisions so lists of simpleNames and count are accurate. "
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==0 &&  Agg_Count == Agg_Count_Threshold
    disabled: true
    conf:
      commands:
        - outField: event_simpleName
          command: smembers
          keyExpr: "'eventnames'+ __network_key"
        - outField: Agg_Window
          command: pttl
          keyExpr: __network_key
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:zLk7mfVLypELO7LGf7/56YXVOijnxg7rSLjf0UU5VgVMmwyo86jLGlAUqZz+F/tvxW\
        DHfo3NVWe9gb4KE+ztnQ=="
    description: Get list of simpleNames being aggregated & time period for aggregation
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==0 &&  Agg_Count == Agg_Count_Threshold
    disabled: true
    conf:
      commands:
        - outField: __del_results
          command: del
          keyExpr: "'eventnames'+ __network_key"
          argsExpr: __network_key
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:u4tzfEB0smatRoAN24THEVs8oX98CoE5fvKllMmSFW4SaBMr6IAVVYmj52PwZ1wn1L\
        O2cMxxWAbW0UuUegq1xQ=="
    description: Delete both keys to start new aggregation period
    groupId: dlLbUK
  - id: drop
    filter: (__setnx_results==0 && Agg_Count < Agg_Count_Threshold) ||
      (__setnx_results==1)
    disabled: true
    conf: {}
    groupId: dlLbUK
    final: true
    description: Drop all events if agg count is less than 10
  - id: eval
    filter: Agg_Window !== undefined
    disabled: true
    conf:
      add:
        - name: Agg_Window
          value: (Agg_Period - Agg_Window/1000).toFixed(3)
    groupId: dlLbUK
  - id: serialize
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      type: json
      dstField: _raw
      fields:
        - aid
        - aip
        - Local*
        - Remote*
        - Protocol
        - timestamp
        - "*count"
        - "!Agg_Period"
        - Agg*
        - event_simpleName*
    groupId: dlLbUK
    description: Built aggregate event
  - id: eval
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      remove:
        - aid
        - aip
        - Local*
        - Remote*
        - Protocol
        - Conn*
        - timestamp
        - event_simpleName
        - Agg*
    groupId: dlLbUK
  - id: eval
    filter: "true"
    disabled: null
    conf:
      add:
        - name: _raw
          value: JSON.parse(_raw)
