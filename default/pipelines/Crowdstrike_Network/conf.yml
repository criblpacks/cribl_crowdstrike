output: default
groups:
  lYiMNr:
    name: Native Aggregation
    description: "A: Aggregate via native Cribl function"
    disabled: false
    index: 5
  dlLbUK:
    name: Redis Aggregation
    index: 7
    disabled: true
    description: "B: Aggregate via Redis"
  jwzZTy:
    name: Redis_Serialize_Alternative
    description: Alternative to last eval within Redis Agg group. Here for reference
      only. Keep disabled
    disabled: true
    index: 9
asyncFuncTimeout: 1000
functions:
  - id: eval
    filter: typeof _raw !== 'object'
    disabled: false
    conf:
      add:
        - name: _raw
          value: JSON.parse(_raw)
    description: Convert to JSON if not already. Only here for when needing to test
      events inside this pipeline instead of the top level Crowdstrike General
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: DROP events if remote host is the same as local host (i.e. app talking
        to another app on the same host)
  - id: drop
    filter: _raw.RemoteAddressIP4.length>0 && _raw.LocalAddressIP4.length>0 &&
      _raw.RemoteAddressIP4 == _raw.LocalAddressIP4
    disabled: false
    conf: {}
    description: RemoteIP = LocalIP
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Enable Group A OR Group B, NOT BOTH
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "GROUP A: Cribl Native Aggregation "
  - id: aggregation
    filter: LocalPort <= RemotePort && LocalPort!=0
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: true
      sufficientStatsOnly: false
      mergeSufficientStats: false
      metricsMode: false
      timeWindow: 60s
      aggregations:
        - values(_raw.event_simpleName).as(event_simpleName)
        - values(_raw.RemotePort).as(RemotePort)
        - values(_raw.aip).as(aip)
        - values(_raw.event_platform).as(event_platform)
        - count()
      cumulative: false
      sendResetEvent: false
      flushOnInputClose: true
      groupbys:
        - _raw.Local*
        - _raw.RemoteAdd*
        - _raw.aid*
        - _raw.Protocol
        - index
        - sourcetype
        - host
        - source
      add: []
    groupId: lYiMNr
    description: LocalAddress is likely the server, since port is lower. Aggregate
      on LocalPort, collect values of RemotePort
  - id: aggregation
    filter: _raw.LocalPort > _raw.RemotePort || _raw.LocalPort==0
    disabled: false
    conf:
      passthrough: false
      preserveGroupBys: false
      sufficientStatsOnly: false
      mergeSufficientStats: false
      metricsMode: false
      timeWindow: 60s
      aggregations:
        - values(_raw.event_simpleName).as(event_simpleName)
        - values(_raw.LocalPort).as(LocalPort)
        - values(_raw.aip).as(aip)
        - values(_raw.event_platform).as(event_platform)
        - count()
      cumulative: false
      sendResetEvent: false
      flushOnInputClose: true
      groupbys:
        - _raw.LocalAdd*
        - _raw.aid*
        - _raw.Remote*
        - _raw.Protocol
        - index
        - sourcetype
        - host
        - source
      add: []
    groupId: lYiMNr
    description: RemoteAddress is likely the server, since port is lower. Aggregate
      on RemotePort, collect values of LocalPort
  - id: comment
    filter: "true"
    disabled: false
    conf:
      comment: If values(xxx) returns array of 1 value, flatter the field
    groupId: lYiMNr
  - id: eval
    filter: "true"
    disabled: false
    conf:
      add:
        - value: "aip.length==1 ? aip[0] : aip"
          name: aip
        - name: LocalPort
          value: "LocalPort.length==1 ? LocalPort[0] : LocalPort"
        - value: "RemotePort.length==1 ? RemotePort[0] : RemotePort"
          name: RemotePort
        - value: "event_platform.length ==1 ? event_platform[0] : event_platform"
          name: event_platform
        - name: event_simpleName
          value: "event_simpleName.length==1 ? event_simpleName[0] : event_simpleName"
    groupId: lYiMNr
    description: Trim fields with one value, rather than being nested
  - id: rename
    filter: "true"
    disabled: null
    conf:
      wildcardDepth: 5
      renameExpr: "name.startsWith('_raw\\.') ? name.replace('_raw\\.','') : name"
    groupId: lYiMNr
    description: Rename all the _raw.xxx fields
  - id: serialize
    filter: "true"
    disabled: false
    conf:
      type: json
      dstField: _raw
      fields:
        - "!cribl*"
        - "!_time"
        - "!__*"
        - "!_raw"
        - "!sourcetype"
        - "!source"
        - "!host"
        - "!index"
        - "*"
    groupId: lYiMNr
  - id: eval
    filter: "true"
    disabled: null
    conf:
      remove:
        - "*"
      keep:
        - _raw
        - cribl*
        - _time
        - source
        - sourcetype
        - host
        - index
    groupId: lYiMNr
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: "GROUP B: Aggregation via Redis"
  - id: eval
    filter: "true"
    disabled: true
    conf:
      add:
        - name: __Agg_Count_Threshold
          value: "10"
        - name: __Agg_Period
          value: "120"
        - name: __Agg_Period_High
          value: "86400"
    groupId: dlLbUK
    description: Agg Thresholds Definition
  - id: eval
    filter: _raw.LocalPort !== undefined && _raw.RemotePort !== undefined
    disabled: true
    conf:
      add:
        - name: __network_key
          value: "_raw.LocalPort <= _raw.RemotePort && _raw.LocalPort !== 0 &&
            _raw.RemotePort !==0 ?
            '__net___'+_raw.LocalAddressIP4+'___'+_raw.LocalPort+'___'+_raw.Rem\
            oteAddressIP4+'___'+_raw.Protocol :
            '__net___'+_raw.RemoteAddressIP4+'___'+_raw.RemotePort+'___'+_raw.L\
            ocalAddressIP4+'___'+_raw.Protocol"
        - name: __network_key
          value: "_raw.LocalPort == 0 ?
            '__net___'+_raw.RemoteAddressIP4+'___'+_raw.RemotePort+'___'+_raw.L\
            ocalAddressIP4+'___'+_raw.Protocol+'___'+_raw.aip : __network_key"
        - name: __network_key
          value: "_raw.RemotePort == 0  ?
            '__net___'+_raw.LocalAddressIP4+'___'+_raw.LocalPort+'___'+_raw.Rem\
            oteAddressIP4+'___'+_raw.Protocol+'___'+_raw.aip : __network_key"
    groupId: dlLbUK
    description: set key field for redis; account for who has lower port and higher port
  - id: redis
    filter: "true"
    disabled: true
    conf:
      commands:
        - outField: __setnx_results
          command: setnx
          keyExpr: __network_key
          argsExpr: "1"
      deploymentType: standalone
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:LTO4z10mLxDeNuZOnh+6ei0rVFK8M7Ov0FDbXSytBtNaOFaQGzf9FnJuhei+EAmx\
        aSzlcf8euS4ESAFKiGTB3w=="
    description: Create key in Redis regardless of traffic direction
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==1
    disabled: true
    conf:
      commands:
        - outField: __expire_networkkey_results
          command: expire
          keyExpr: __network_key
          argsExpr: __Agg_Period_High
      deploymentType: standalone
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:0aAV53YhMfFvCnxDsFGwWPKv70AMlTYFwBwjSLjoAOcyb4qDPejhEXmxgKi3xDHz\
        s7YVCP07FtXyR0eFxj4ojQ=="
    description: Avoiding collisions so lists of simpleNames are accurate. Setting
      values only if setnx was successful
    groupId: dlLbUK
  - id: redis
    filter: __setnx_results==0
    disabled: true
    conf:
      commands:
        - command: incrby
          outField: Agg_Count
          keyExpr: __network_key
          argsExpr: "1"
        - outField: __event_ttl_ms
          command: pttl
          keyExpr: __network_key
      deploymentType: standalone
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:XFeaYvm4LovChn9iHC72db0EKLiaz5ruaz0vqF9/dT4TY1eSpfi4vGV/rmqHzGff\
        qa9TQkDJwgqzQvWgXx4zxg=="
    description: "Avoiding collisions so lists of simpleNames and count are accurate. "
    groupId: dlLbUK
  - id: eval
    filter: "true"
    disabled: true
    conf:
      add:
        - value: (__Agg_Period_High - (__event_ttl_ms/1000)).toFixed(3)
          name: Agg_Window
    groupId: dlLbUK
    description: Calculate Aggregation Window
  - id: redis
    filter: (__setnx_results==0 && Agg_Count == __Agg_Count_Threshold && Agg_Window
      <= __Agg_Period) || (__setnx_results==0 && Agg_Window > __Agg_Period)
    disabled: true
    conf:
      commands:
        - outField: __del_network_key
          command: del
          keyExpr: __network_key
      deploymentType: standalone
      authType: manual
      maxBlockSecs: 60
      url: redis://redis-cache:6379
      password: "#42:KUSfOypJCQakyWr0OCSouem/k4hsKv0zmpmYaZXL/2pYojxEpQk9owE/2Xr9sifI\
        zTAqX6LkLhJ5SfGgEUlFNw=="
    description: Delete both keys to start new aggregation if one of prior
      conditions was met
    groupId: dlLbUK
  - id: drop
    filter: (__setnx_results==0 && Agg_Count < __Agg_Count_Threshold && Agg_Window <
      __Agg_Period) || (__setnx_results==1)
    disabled: true
    conf: {}
    groupId: dlLbUK
    final: true
    description: Drop event if agg count is less than threshold
  - id: eval
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      remove:
        - _raw.*
      keep:
        - _raw.aid
        - _raw.aip
        - _raw.Local*
        - _raw.Remote*
        - _raw.Protocol
        - _raw.Conn*
        - _raw.timestamp
        - _raw.event_simpleName
        - _raw.Agg*
    groupId: dlLbUK
    description: Remove serialized fields
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Below group is for reference only. Includes alternative method of
        sending count and agg_window inside _raw. Keep disabled.
  - id: eval
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      add:
        - value: _raw.aip
          name: aip
        - name: aid
          value: _raw.aid
        - name: event_simpleName
          value: _raw.event_simpleName
        - name: LocalPort
          value: _raw.LocalPort
        - value: _raw.RemotePort
          name: RemotePort
        - name: LocalAddressIP4
          value: _raw.LocalAddressIP4
        - name: RemoteAddressIP4
          value: _raw.RemoteAddressIP4
        - value: _raw.Protocol
          name: _raw.Protocol
    description: DeJSONify single value fields (doesn't apply to events dropped in
      prior step)
    groupId: jwzZTy
  - id: serialize
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      type: json
      dstField: _raw
      fields:
        - aid
        - aip
        - Local*
        - Remote*
        - Protocol
        - timestamp
        - "*count"
        - Agg*
        - event_simpleName*
    description: Built aggregate event
    groupId: jwzZTy
  - id: eval
    filter: __setnx_results !== undefined
    disabled: true
    conf:
      remove:
        - aid
        - aip
        - Local*
        - Remote*
        - Protocol
        - Conn*
        - timestamp
        - event_simpleName
        - Agg*
    description: Remove serialized fields
    groupId: jwzZTy
